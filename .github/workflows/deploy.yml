name: deploy

on:
  push:
    branches:
      - master
      - release-
  create:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # - uses: actions/cache@v1
    #   with:
    #     path: ~/.npm
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node-
    # - name: Use Node.js 12.x
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: 12.x
    # - run: npm install
    # - run: npm run build

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    - name: Get image tag for push
      run: |
        export SHA=${{ github.sha }}
        echo "::set-env name=IMAGE_TAG::${SHA::6}"
        echo "::set-env name=DEPLOY_ENV::dev"
      if: github.event_name == 'push'
    
    - name: Get image tag for tag
      run: |
        echo "::set-env name=IMAGE_TAG::${GITHUB_REF/refs\/tags\//}"
        echo "::set-env name=DEPLOY_ENV::prod"
      if: github.event_name == 'create'

    # - name: Build, tag, and push image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: asem-labs
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Logout of Amazon ECR
    #   if: always()
    #   run: docker logout ${{ steps.login-ecr.outputs.registry }}
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: './terraform'
        args: '-backend-config="bucket=asem-labs-${{ env.DEPLOY_ENV }}"'
      env:
        TF_VAR_env_name: ${{ env.DEPLOY_ENV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
    
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.13
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: './terraform'
        args: '-backend-config="bucket=asem-labs-${{ env.DEPLOY_ENV }}"'
      env:
        TF_VAR_env_name: ${{ env.DEPLOY_ENV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}

    # - name: 'Terraform Apply'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.12.13
    #     tf_actions_subcommand: 'apply'
    #     tf_actions_working_dir: './terraform'
    #     args: '-backend-config="bucket=asem-labs-${{ env.DEPLOY_ENV }}", -auto-approve'
    #   env:
    #     TF_VAR_env_name: ${{ env.DEPLOY_ENV }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}